#!/usr/bin/env python

import pkgutil
import random
import time

from os.path import dirname, join

import dummy


def get_dummy_path():
    return dirname(dummy.__file__)

def get_dummy_modules():
    dummy_path = join(dirname(__file__), 'dummy')
    return [name for _, name, _ in pkgutil.iter_modules([dummy_path])]



def init_restore():

    contents = {}
    dummy_path = join(dirname(__file__), 'dummy')
    for module in get_dummy_modules():
        with open(join(get_dummy_path(), '%s.py' % module)) as fd:
            contents.update({module: '\n'.join(fd.readlines())})

    return contents


def restore(contents):

   for module, content in contents.iteritems():
        with open(join(get_dummy_path(), '%s.py' % module), 'w') as fd:
            fd.write(content)


def random_change():

    try:
        cur_mod = random.choice(get_dummy_modules())

        lines = []
        with open(join(get_dummy_path(), '%s.py' % cur_mod), 'r+') as fd:
            lines = fd.readlines()

            index_line = random.randint(0, len(lines) - 1)
            lines[index_line] = ">>> CRAZY BABOON CHANGED THIS LINE ! <<<"

            fd.write('\n'.join(lines))
    except (ValueError, IndexError):
        pass


def main():

    print("Hi ! I'm a dummy project to quickly test the Baboon project.")
    print("Crazy Baboon randomly changes any files in the dummy folder/.")
    print("If you correctly have installed Baboon, you will receive realtime "
          "merge conflicts alerts.")

    sleeptime = 6

    try:
        contents = init_restore()
        while True:
            for i in range(10):
                random_change()
                time.sleep(sleeptime)

            print("Crazy baboon cancels all changes !")
            restore(contents)
            time.sleep(sleeptime)
    except KeyboardInterrupt:
        pass


if __name__ == "__main__":
    main()

